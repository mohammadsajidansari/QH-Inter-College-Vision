{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/Cards/Cards.jsx","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","header/header.js","bottom/socialFollows/socialFollows.js","bottom/bottom.js","App.js","serviceWorker.js","index.js","header/header.module.css","App.module.css","bottom/Bottom.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","Image/Logo.png","Image/WhatsApp.jpeg"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Cards","className","styles","container","Grid","spacing","justify","item","xs","md","component","Card","cx","card","typograpgy","CardContent","Typography","color","gutterBottom","variant","infected","start","end","value","duration","separator","Date","toDateString","Chart","useState","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","borderColor","fill","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchAPI","FormControl","formControll","NativeSelect","defaultValue","onChange","e","target","i","key","Header","header","src","Logo","alt","logo","heading","SocialFollows","href","icon","faInstagram","size","faWhatsapp","faYoutube","Bottom","bottom","socialFollows","App","state","fetchedData","setState","this","WhatsApp","mainImage","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5870027b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1Fhnq\",\"card\":\"Cards_card__3Fv-d\",\"infected\":\"Cards_infected__1sN61\",\"recovered\":\"Cards_recovered__1aO1J\",\"deaths\":\"Cards_deaths__1EBJX\",\"typograpgy\":\"Cards_typograpgy__1YAlF\"};","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async ( country) => {\r\n    let changeableUrl = url;\r\n\r\n    if (country) {\r\n        changeableUrl = `${url}/countries/${country}`\r\n    }\r\n        try {\r\n        const { data : { confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl);\r\n\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n        \r\n    } catch ( error ) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n\r\n        return modifiedData;\r\n    } catch  (error) {\r\n        console.log(error);\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport const fetchCountries = async () => {\r\n    try{\r\n        const { data: { countries }} = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n    }catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return 'Loading...';\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n      <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.typograpgy)}>\r\n          <CardContent >\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n               COVID-19 Updates By QH Inter College.\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n            Here You Can Check Updates Of COVID-19 Confirmed,\r\n             Recovered Cases And Deaths. Here You Can Also Check \r\n             Country Wise Updates Of Cases.      \r\n            </Typography>\r\n            <Typography color=\"Secondary\" component=\"p\">\r\n                    Important\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n            Online classes of QH Inter College are going on.\r\n             check out the YouTube link below to watch the lectures.     \r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <CountUp start={0} end={confirmed.value} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              Number of active cases of COVID-19.\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <CountUp start={0} end={recovered.value} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              Number of recoveries from COVID-19.\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <CountUp start={0} end={deaths.value} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              Number of deaths caused by COVID-19.\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default Cards;","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../api/index';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  const lineChart = (\r\n    dailyData[0] ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [{\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n          },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React, { useEffect, useState } from 'react';\r\nimport { NativeSelect, FormControl} from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api/index';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI ();\r\n    }, [setFetchedCountries]);\r\n\r\n    console.log(fetchedCountries)\r\n\r\n    return(\r\n        <FormControl className={styles.formControll}>\r\n            <NativeSelect defaultValue=\"\"  onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n               {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport styles from './header.module.css';\r\nimport Logo from '../Image/Logo.png';\r\n\r\nfunction Header () {\r\n    return (\r\n        <div className={styles.header}>\r\n            <img src={Logo} alt=\"QH img\" className={styles.logo} />\r\n            <div className={styles.heading}>QH Inter College!</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport './socialFollows.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faYoutube, faInstagram, faWhatsapp  } from \"@fortawesome/free-brands-svg-icons\"; \r\n\r\nfunction SocialFollows () {\r\n    return(\r\n        <div className=\"social-container\">\r\n        <div className=\"heading-follows\">Follow Us</div>\r\n        \r\n        <a href=\"https://www.instagram.com/qh_inter_college/\" className=\"instagram social\">\r\n          <FontAwesomeIcon icon={faInstagram} size=\"1x\" />\r\n        </a>\r\n        <a href=\"https://www.whatsapp.com/\" className=\"whatsapp social\">\r\n          <FontAwesomeIcon icon={faWhatsapp} size=\"1x\" />\r\n        </a>\r\n        <a href=\"https://www.youtube.com/channel/UCGQ3bhduu-u_dmyMVRPRtkQ\" className=\"youtube social\">\r\n          <FontAwesomeIcon icon={faYoutube} size=\"1x\" />\r\n        </a>\r\n        <div className=\"developer\" >Developed By Mohammad Sajid.</div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default SocialFollows;","import React from 'react';\r\n\r\nimport styles from './Bottom.module.css';\r\nimport SocialFollows from './socialFollows/socialFollows';\r\n\r\n\r\nfunction Bottom () {\r\n    return (\r\n        <div className={styles.bottom}>\r\n            <div className={styles.socialFollows} >\r\n              <SocialFollows />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Bottom;","import React, { Component } from 'react';\nimport styles from './App.module.css';\nimport { fetchData } from './api/index';\n\nimport { Cards, Chart, CountryPicker } from './components';\nimport Header from './header/header';\nimport Bottom from './bottom/bottom';\nimport WhatsApp from './Image/WhatsApp.jpeg';\n\nclass App extends Component  {\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount () {\n    const fetchedData = await fetchData();\n\n    this.setState({data: fetchedData});\n  }\n\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n\n    this.setState({data: fetchedData, country: country});\n  }\n  render () {\n    const { data, country } = this.state;\n    return (\n      <div className={styles.container}>\n        <Header />\n       <img src={WhatsApp} alt=\"covid-19\" className={styles.mainImage} />\n      <Cards data={data} />\n      <CountryPicker handleCountryChange={this.handleCountryChange} />\n      <Chart  data={data} country={country} />\n      <Bottom />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__3qcJh\",\"logo\":\"header_logo__1adH7\",\"heading\":\"header_heading__1EFoM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3UKQ5\",\"App-logo\":\"App_App-logo__31r_3\",\"App-logo-spin\":\"App_App-logo-spin__1nGKY\",\"App-header\":\"App_App-header__DGb2i\",\"App-link\":\"App_App-link__3lwQV\",\"mainImage\":\"App_mainImage__2szwP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bottom\":\"Bottom_bottom__1eQxh\",\"socialFollows\":\"Bottom_socialFollows__18EDn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__64uVY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControll\":\"CountryPicker_formControll__2j3Q3\"};","module.exports = __webpack_public_path__ + \"static/media/Logo.2beca9de.png\";","module.exports = __webpack_public_path__ + \"static/media/WhatsApp.2e2e4b1a.jpeg\";"],"sourceRoot":""}